### <beg-file_info>
### main:
###   - date: created="Mon Nov 30 21:42:43 2015"
###     last: lastmod="Mon Nov 30 21:42:43 2015"
###     tags: ko09, komodo, javascript, api, functions
###     author: created="dreftymac"
###     dreftymacid: "dafter_climbing_sway"
###     seealso: |
###         * href="./devlog.txt"
###         * href="smartpath://mymedia/2014/git/github/public.lab/demo/komodo8.demo/tymac_komodo_addon.js"
###     desc: |
###         ko09 javascript functions
### <end-file_info>

### ------------------------------------------------------------------------
ko09StrFunctions:
  - funcname: Str_toUcfirst
    date: created="Mon Nov 30 21:44:06 2015"
    last: lastmod="Mon Nov 30 21:44:06 2015"
    funcexample: |
      __blank__
    funcdesc: |
          return string transformation: uppercase first letter of first word
    funcparams:
         - ['raw', '(string)', 'raw input string']
    funcreturns:
         ['string ;; uppercase first letter']
    tags: string, transform
    dreftymacid: meatier_losing_segment
    funcdependencies: "__blank__"
    funcdetails: |
       funcdetails
    seealso: |
       *
    wwfuncbody: |
       if(!raw){raw = this.Buf_getSelection(true);}
       vout    =   raw;
       vout    =   vout.toLowerCase();
       vout    =   (vout + '').charAt(0).toUpperCase() + vout.substr(1);
       return vout;


  - funcname: Str_toLowerCase
    date: created="Mon Nov 30 21:44:06 2015"
    last: lastmod="Mon Nov 30 21:44:06 2015"
    funcexample: |
        __blank__
    funcdesc: |
          return string transformation: toLowerCase
    funcparams:
         - ['raw', '(string)', 'raw input string']
    funcreturns:
         ['string ;; uppercase first letter']
    tags: string, transform
    dreftymacid: brownest_haziest_zobrist
    funcdependencies: "__blank__"
    funcdetails: |
       funcdetails
    seealso: |
       *
    wwfuncbody: |
       if(!raw){raw = this.Buf_getSelection(true);}
       vout    =   raw;
       vout    =   vout.toLowerCase();
       return vout;

  - funcname: Str_toUpperCase
    date: created="Mon Nov 30 21:44:06 2015"
    last: lastmod="Mon Nov 30 21:44:06 2015"
    funcexample: |
      __blank__
    funcdesc: |
          return string transformation: toUpperCase
    funcparams:
         - ['raw', '(string)', 'raw input string']
    funcreturns:
         ['string ;; uppercase first letter']
    tags: string, transform
    dreftymacid: undying_forgave_brow
    funcdependencies: "__blank__"
    funcdetails: |
       funcdetails
    seealso: |
       *
    wwfuncbody: |
       if(!raw){raw = this.Buf_getSelection(true);}
       vout    =   raw;
       vout    =   vout.toUpperCase();
       return vout;


  - funcname: Str_wordsUpperCase
    date: created="Mon Nov 30 21:44:06 2015"
    last: lastmod="Mon Nov 30 21:44:06 2015"
    funcexample: |
        __blank__
    funcdesc: |
          return string transformation: Uppercase upcase first letter of words in string
    funcparams:
         - ['raw', '(string)', 'raw input string']
    funcreturns:
         ['string ;; uppercase first letter']
    tags: string, transform
    dreftymacid: shrimp_vascular_unjam
    funcdependencies: "__blank__"
    funcdetails: |
       funcdetails
    seealso: |
       *
    wwfuncbody: |
       if(!raw){raw = this.Buf_getSelection(true);}
       vout    =   raw;
       vout    =   (vout+'').replace(/^(.)|\s(.)/g, function( $1 ){return $1.toUpperCase( );} );
       return vout;
       
  - funcname: Str_spaceSqueeze
    date: created="2016-01-09T10:55:27"
    last: lastmod="2016-01-09T10:55:27"
    funcexample: |
          __blank__
    funcdesc: |
          return string transformation: reduce all whitespace to single spaces
    funcparams:
         - ['raw', '(string)', 'raw input string']
    funcreturns:
         ['string ;; string transformation']
    tags: space, whitespace, squeeze
    dreftymacid: violins_initial_unlucky
    funcdependencies: "__blank__"
    funcdetails: |
       funcdetails
    seealso: |
       *
    wwfuncbody: |
       if(!raw){raw = this.Buf_getSelection(true);}
       vout    =   raw;
       vout    =   vout.toString().split(/[\s\t]+/).join('_');
       return vout;

  - funcname: Str_spacesToUnderscore
    date: created="Mon Nov 30 21:44:06 2015"
    last: lastmod="Mon Nov 30 21:44:06 2015"
    funcexample: |
          __blank__
    funcdesc: |
          return string transformation: convert spaces to underscore
    funcparams:
         - ['raw', '(string)', 'raw input string']
    funcreturns:
         ['string ;; string transformation']
    tags: string, transform
    dreftymacid: violins_initial_unlucky
    funcdependencies: "__blank__"
    funcdetails: |
       funcdetails
    seealso: |
       *
    wwfuncbody: |
       if(!raw){raw = this.Buf_getSelection(true);}
       vout    =   raw;
       vout    =   vout.toString().split(/[\s\t]+/).join('_');
       return vout;


  - funcname: Str_underscoreToSpaces
    date: created="Mon Nov 30 21:44:06 2015"
    last: lastmod="Mon Nov 30 21:44:06 2015"
    funcexample: |
        __blank__
    funcdesc: |
          return string transformation: convert underscore to spaces
    funcparams:
         - ['raw', '(string)', 'raw input string']
    funcreturns:
         ['string ;; string transformation']
    tags: string, transform
    dreftymacid: satiric_gladys_bodily
    funcdependencies: "__blank__"
    funcdetails: |
       funcdetails
    seealso: |
       *
    wwfuncbody: |
       if(!raw){raw = this.Buf_getSelection(true);}
       vout    =   raw;
       vout    =   vout.split(/[_]+/).join(' ');
       return vout;

